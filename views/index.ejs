<script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
<link href="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
<script src="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<!------ Include the above in your HEAD tag ---------->

<link href="//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
<script src="//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js"></script>
<!------ Include the above in your HEAD tag ---------->


<!DOCTYPE html><html class=''>
<head><script src='//production-assets.codepen.io/assets/editor/live/console_runner-079c09a0e3b9ff743e39ee2d5637b9216b3545af0de366d4b9aad9dc87e26bfd.js'></script><script src='//production-assets.codepen.io/assets/editor/live/events_runner-73716630c22bbc8cff4bd0f07b135f00a0bdc5d14629260c3ec49e5606f98fdd.js'></script><script src='//production-assets.codepen.io/assets/editor/live/css_live_reload_init-2c0dc5167d60a5af3ee189d570b1835129687ea2a61bee3513dee3a50c115a77.js'></script><meta charset='UTF-8'><meta name="robots" content="noindex"><link rel="shortcut icon" type="image/x-icon" href="//production-assets.codepen.io/assets/favicon/favicon-8ea04875e70c4b0bb41da869e81236e54394d63638a1ef12fa558a4a835f1164.ico" /><link rel="mask-icon" type="" href="//production-assets.codepen.io/assets/favicon/logo-pin-f2d2b6d2c61838f7e76325261b7195c27224080bc099486ddd6dccb469b8e8e6.svg" color="#111" /><link rel="canonical" href="https://codepen.io/emilcarlsson/pen/ZOQZaV?limit=all&page=74&q=contact+" />
<link href='https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,600,700,300' rel='stylesheet' type='text/css'>

<script src="https://use.typekit.net/hoy3lrg.js"></script>
<script>try{Typekit.load({ async: true });}catch(e){}</script>
<link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css'><link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.2/css/font-awesome.min.css'>
<style class="cp-pen-styles">body {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  background: #27ae60;
  font-family: "proxima-nova", "Source Sans Pro", sans-serif;
  font-size: 1em;
  letter-spacing: 0.1px;
  color: #32465a;
  text-rendering: optimizeLegibility;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.004);
  -webkit-font-smoothing: antialiased;
}

#frame {
  width: 95%;
  min-width: 360px;
  max-width: 1000px;
  height: 92vh;
  min-height: 300px;
  max-height: 720px;
  background: #E6EAEA;
}
@media screen and (max-width: 360px) {
  #frame {
    width: 100%;
    height: 100vh;
  }
}
#frame #sidepanel {
  float: left;
  min-width: 280px;
  max-width: 340px;
  width: 40%;
  height: 100%;
  background: #2c3e50;
  color: #f5f5f5;
  overflow: hidden;
  position: relative;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel {
    width: 58px;
    min-width: 58px;
  }
}
#frame #sidepanel #profile {
  width: 80%;
  margin: 25px auto;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #profile {
    width: 100%;
    margin: 0 auto;
    padding: 5px 0 0 0;
    background: #32465a;
  }
}
#frame #sidepanel #profile.expanded .wrap {
  height: 210px;
  line-height: initial;
}
#frame #sidepanel #profile.expanded .wrap p {
  margin-top: 20px;
}
#frame #sidepanel #profile.expanded .wrap i.expand-button {
  -moz-transform: scaleY(-1);
  -o-transform: scaleY(-1);
  -webkit-transform: scaleY(-1);
  transform: scaleY(-1);
  filter: FlipH;
  -ms-filter: "FlipH";
}
#frame #sidepanel #profile .wrap {
  height: 60px;
  line-height: 60px;
  overflow: hidden;
  -moz-transition: 0.3s height ease;
  -o-transition: 0.3s height ease;
  -webkit-transition: 0.3s height ease;
  transition: 0.3s height ease;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #profile .wrap {
    height: 55px;
  }
}
#frame #sidepanel #profile .wrap img {
  width: 50px;
  border-radius: 50%;
  padding: 3px;
  border: 2px solid #e74c3c;
  height: auto;
  float: left;
  cursor: pointer;
  -moz-transition: 0.3s border ease;
  -o-transition: 0.3s border ease;
  -webkit-transition: 0.3s border ease;
  transition: 0.3s border ease;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #profile .wrap img {
    width: 40px;
    margin-left: 4px;
  }
}
#frame #sidepanel #profile .wrap img.online {
  border: 2px solid #2ecc71;
}
#frame #sidepanel #profile .wrap img.away {
  border: 2px solid #f1c40f;
}
#frame #sidepanel #profile .wrap img.busy {
  border: 2px solid #e74c3c;
}
#frame #sidepanel #profile .wrap img.offline {
  border: 2px solid #95a5a6;
}
#frame #sidepanel #profile .wrap p {
  float: left;
  margin-left: 15px;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #profile .wrap p {
    display: none;
  }
}
#frame #sidepanel #profile .wrap i.expand-button {
  float: right;
  margin-top: 23px;
  font-size: 0.8em;
  cursor: pointer;
  color: #435f7a;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #profile .wrap i.expand-button {
    display: none;
  }
}
#frame #sidepanel #profile .wrap #status-options {
  position: absolute;
  opacity: 0;
  visibility: hidden;
  width: 150px;
  margin: 70px 0 0 0;
  border-radius: 6px;
  z-index: 99;
  line-height: initial;
  background: #435f7a;
  -moz-transition: 0.3s all ease;
  -o-transition: 0.3s all ease;
  -webkit-transition: 0.3s all ease;
  transition: 0.3s all ease;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #profile .wrap #status-options {
    width: 58px;
    margin-top: 57px;
  }
}
#frame #sidepanel #profile .wrap #status-options.active {
  opacity: 1;
  visibility: visible;
  margin: 75px 0 0 0;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #profile .wrap #status-options.active {
    margin-top: 62px;
  }
}
#frame #sidepanel #profile .wrap #status-options:before {
  content: '';
  position: absolute;
  width: 0;
  height: 0;
  border-left: 6px solid transparent;
  border-right: 6px solid transparent;
  border-bottom: 8px solid #435f7a;
  margin: -8px 0 0 24px;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #profile .wrap #status-options:before {
    margin-left: 23px;
  }
}
#frame #sidepanel #profile .wrap #status-options ul {
  overflow: hidden;
  border-radius: 6px;
}
#frame #sidepanel #profile .wrap #status-options ul li {
  padding: 15px 0 30px 18px;
  display: block;
  cursor: pointer;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #profile .wrap #status-options ul li {
    padding: 15px 0 35px 22px;
  }
}
#frame #sidepanel #profile .wrap #status-options ul li:hover {
  background: #496886;
}
#frame #sidepanel #profile .wrap #status-options ul li span.status-circle {
  position: absolute;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  margin: 5px 0 0 0;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #profile .wrap #status-options ul li span.status-circle {
    width: 14px;
    height: 14px;
  }
}
#frame #sidepanel #profile .wrap #status-options ul li span.status-circle:before {
  content: '';
  position: absolute;
  width: 14px;
  height: 14px;
  margin: -3px 0 0 -3px;
  background: transparent;
  border-radius: 50%;
  z-index: 0;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #profile .wrap #status-options ul li span.status-circle:before {
    height: 18px;
    width: 18px;
  }
}
#frame #sidepanel #profile .wrap #status-options ul li p {
  padding-left: 12px;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #profile .wrap #status-options ul li p {
    display: none;
  }
}
#frame #sidepanel #profile .wrap #status-options ul li#status-online span.status-circle {
  background: #2ecc71;
}
#frame #sidepanel #profile .wrap #status-options ul li#status-online.active span.status-circle:before {
  border: 1px solid #2ecc71;
}
#frame #sidepanel #profile .wrap #status-options ul li#status-away span.status-circle {
  background: #f1c40f;
}
#frame #sidepanel #profile .wrap #status-options ul li#status-away.active span.status-circle:before {
  border: 1px solid #f1c40f;
}
#frame #sidepanel #profile .wrap #status-options ul li#status-busy span.status-circle {
  background: #e74c3c;
}
#frame #sidepanel #profile .wrap #status-options ul li#status-busy.active span.status-circle:before {
  border: 1px solid #e74c3c;
}
#frame #sidepanel #profile .wrap #status-options ul li#status-offline span.status-circle {
  background: #95a5a6;
}
#frame #sidepanel #profile .wrap #status-options ul li#status-offline.active span.status-circle:before {
  border: 1px solid #95a5a6;
}
#frame #sidepanel #profile .wrap #expanded {
  padding: 100px 0 0 0;
  display: block;
  line-height: initial !important;
}
#frame #sidepanel #profile .wrap #expanded label {
  float: left;
  clear: both;
  margin: 0 8px 5px 0;
  padding: 5px 0;
}
#frame #sidepanel #profile .wrap #expanded input {
  border: none;
  margin-bottom: 6px;
  background: #32465a;
  border-radius: 3px;
  color: #f5f5f5;
  padding: 7px;
  width: calc(100% - 43px);
}
#frame #sidepanel #profile .wrap #expanded input:focus {
  outline: none;
  background: #435f7a;
}
#frame #sidepanel #search {
  border-top: 1px solid #32465a;
  border-bottom: 1px solid #32465a;
  font-weight: 300;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #search {
    display: none;
  }
}
#frame #sidepanel #search label {
  position: absolute;
  margin: 10px 0 0 20px;
}
#frame #sidepanel #search input {
  font-family: "proxima-nova",  "Source Sans Pro", sans-serif;
  padding: 10px 0 10px 46px;
  width: calc(100% - 25px);
  border: none;
  background: #32465a;
  color: #f5f5f5;
}
#frame #sidepanel #search input:focus {
  outline: none;
  background: #435f7a;
}
#frame #sidepanel #search input::-webkit-input-placeholder {
  color: #f5f5f5;
}
#frame #sidepanel #search input::-moz-placeholder {
  color: #f5f5f5;
}
#frame #sidepanel #search input:-ms-input-placeholder {
  color: #f5f5f5;
}
#frame #sidepanel #search input:-moz-placeholder {
  color: #f5f5f5;
}
#frame #sidepanel #contacts {
  height: calc(100% - 177px);
  overflow-y: scroll;
  overflow-x: hidden;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #contacts {
    height: calc(100% - 149px);
    overflow-y: scroll;
    overflow-x: hidden;
  }
  #frame #sidepanel #contacts::-webkit-scrollbar {
    display: none;
  }
}
#frame #sidepanel #contacts.expanded {
  height: calc(100% - 334px);
}
#frame #sidepanel #contacts::-webkit-scrollbar {
  width: 8px;
  background: #2c3e50;
}
#frame #sidepanel #contacts::-webkit-scrollbar-thumb {
  background-color: #243140;
}
#frame #sidepanel #contacts ul li.contact {
  position: relative;
  padding: 10px 0 15px 0;
  font-size: 0.9em;
  cursor: pointer;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #contacts ul li.contact {
    padding: 6px 0 46px 8px;
  }
}
#frame #sidepanel #contacts ul li.contact:hover {
  background: #32465a;
}
#frame #sidepanel #contacts ul li.contact.active {
  background: #32465a;
  border-right: 5px solid #435f7a;
}
#frame #sidepanel #contacts ul li.contact.active span.contact-status {
  border: 2px solid #32465a !important;
}
#frame #sidepanel #contacts ul li.contact .wrap {
  width: 88%;
  margin: 0 auto;
  position: relative;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #contacts ul li.contact .wrap {
    width: 100%;
  }
}
#frame #sidepanel #contacts ul li.contact .wrap span {
  position: absolute;
  left: 0;
  margin: -2px 0 0 -2px;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  border: 2px solid #2c3e50;
  background: #95a5a6;
}
#frame #sidepanel #contacts ul li.contact .wrap span.online {
  background: #2ecc71;
}
#frame #sidepanel #contacts ul li.contact .wrap span.away {
  background: #f1c40f;
}
#frame #sidepanel #contacts ul li.contact .wrap span.busy {
  background: #e74c3c;
}
#frame #sidepanel #contacts ul li.contact .wrap img {
  width: 40px;
  border-radius: 50%;
  float: left;
  margin-right: 10px;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #contacts ul li.contact .wrap img {
    margin-right: 0px;
  }
}
#frame #sidepanel #contacts ul li.contact .wrap .meta {
  padding: 5px 0 0 0;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #contacts ul li.contact .wrap .meta {
    display: none;
  }
}
#frame #sidepanel #contacts ul li.contact .wrap .meta .name {
  font-weight: 600;
}
#frame #sidepanel #contacts ul li.contact .wrap .meta .preview {
  margin: 5px 0 0 0;
  padding: 0 0 1px;
  font-weight: 400;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  -moz-transition: 1s all ease;
  -o-transition: 1s all ease;
  -webkit-transition: 1s all ease;
  transition: 1s all ease;
}
#frame #sidepanel #contacts ul li.contact .wrap .meta .preview span {
  position: initial;
  border-radius: initial;
  background: none;
  border: none;
  padding: 0 2px 0 0;
  margin: 0 0 0 1px;
  opacity: .5;
}
#frame #sidepanel #bottom-bar {
  position: absolute;
  width: 100%;
  bottom: 0;
}
#frame #sidepanel #bottom-bar button {
  float: left;
  border: none;
  width: 50%;
  padding: 10px 0;
  background: #32465a;
  color: #f5f5f5;
  cursor: pointer;
  font-size: 0.85em;
  font-family: "proxima-nova",  "Source Sans Pro", sans-serif;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #bottom-bar button {
    float: none;
    width: 100%;
    padding: 15px 0;
  }
}
#frame #sidepanel #bottom-bar button:focus {
  outline: none;
}
#frame #sidepanel #bottom-bar button:nth-child(1) {
  border-right: 1px solid #2c3e50;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #bottom-bar button:nth-child(1) {
    border-right: none;
    border-bottom: 1px solid #2c3e50;
  }
}
#frame #sidepanel #bottom-bar button:hover {
  background: #435f7a;
}
#frame #sidepanel #bottom-bar button i {
  margin-right: 3px;
  font-size: 1em;
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #bottom-bar button i {
    font-size: 1.3em;
  }
}
@media screen and (max-width: 735px) {
  #frame #sidepanel #bottom-bar button span {
    display: none;
  }
}
#frame .content {
  float: right;
  width: 60%;
  height: 100%;
  overflow: hidden;
  position: relative;
}
@media screen and (max-width: 735px) {
  #frame .content {
    width: calc(100% - 58px);
    min-width: 300px !important;
  }
}
@media screen and (min-width: 900px) {
  #frame .content {
    width: calc(100% - 340px);
  }
}
#frame .content .contact-profile {
  width: 100%;
  height: 60px;
  line-height: 60px;
  background: #f5f5f5;
}
#frame .content .contact-profile img {
  width: 40px;
  border-radius: 50%;
  float: left;
  margin: 9px 12px 0 9px;
}
#frame .content .contact-profile p {
  float: left;
}
#frame .content .contact-profile .social-media {
  float: right;
}
#frame .content .contact-profile .social-media i {
  margin-left: 14px;
  cursor: pointer;
}
#frame .content .contact-profile .social-media i:nth-last-child(1) {
  margin-right: 20px;
}
#frame .content .contact-profile .social-media i:hover {
  color: #435f7a;
}
#frame .content .messages {
  height: auto;
  min-height: calc(100% - 93px);
  max-height: calc(100% - 93px);
  overflow-y: scroll;
  overflow-x: hidden;
}
@media screen and (max-width: 735px) {
  #frame .content .messages {
    max-height: calc(100% - 105px);
  }
}
#frame .content .messages::-webkit-scrollbar {
  width: 8px;
  background: transparent;
}
#frame .content .messages::-webkit-scrollbar-thumb {
  background-color: rgba(0, 0, 0, 0.3);
}
#frame .content .messages ul li {
  display: inline-block;
  clear: both;
  float: left;
  margin: 15px 15px 5px 15px;
  width: calc(100% - 25px);
  font-size: 0.9em;
}
#frame .content .messages ul li:nth-last-child(1) {
  margin-bottom: 20px;
}
#frame .content .messages ul li.sent img {
  margin: 6px 8px 0 0;
}
#frame .content .messages ul li.sent p {
  background: #435f7a;
  color: #f5f5f5;
}
#frame .content .messages ul li.replies img {
  float: right;
  margin: 6px 0 0 8px;
}
#frame .content .messages ul li.replies p {
  background: #f5f5f5;
  float: right;
}
#frame .content .messages ul li img {
  width: 22px;
  border-radius: 50%;
  float: left;
}
#frame .content .messages ul li p {
  display: inline-block;
  padding: 10px 15px;
  border-radius: 20px;
  max-width: 205px;
  line-height: 130%;
}
@media screen and (min-width: 735px) {
  #frame .content .messages ul li p {
    max-width: 300px;
  }
}
#frame .content .message-input {
  position: absolute;
  bottom: 0;
  width: 100%;
  z-index: 99;
}
#frame .content .message-input .wrap {
  position: relative;
}
#frame .content .message-input .wrap input {
  font-family: "proxima-nova",  "Source Sans Pro", sans-serif;
  float: left;
  border: none;
  width: calc(100% - 90px);
  padding: 11px 32px 10px 8px;
  font-size: 0.8em;
  color: #32465a;
}
@media screen and (max-width: 735px) {
  #frame .content .message-input .wrap input {
    padding: 15px 32px 16px 8px;
  }
}
#frame .content .message-input .wrap input:focus {
  outline: none;
}
#frame .content .message-input .wrap .attachment {
  position: absolute;
  right: 60px;
  z-index: 4;
  margin-top: 10px;
  font-size: 1.1em;
  color: #435f7a;
  opacity: .5;
  cursor: pointer;
}
@media screen and (max-width: 735px) {
  #frame .content .message-input .wrap .attachment {
    margin-top: 17px;
    right: 65px;
  }
}
#frame .content .message-input .wrap .attachment:hover {
  opacity: 1;
}
#frame .content .message-input .wrap button {
  float: right;
  border: none;
  width: 50px;
  padding: 12px 0;
  cursor: pointer;
  background: #32465a;
  color: #f5f5f5;
}
@media screen and (max-width: 735px) {
  #frame .content .message-input .wrap button {
    padding: 16px 0;
  }
}
#frame .content .message-input .wrap button:hover {
  background: #435f7a;
}
#frame .content .message-input .wrap button:focus {
  outline: none;
}
</style>

<script src="/socket.io/socket.io.js"></script>
<script>

  /*
  * Get the user, store the current room and chat Uuid
  */        
  var user = <%- user %>
  var friends = <%- friends %>
  //console.log(friends.length);
  var userFriends = [];
  var checkOffline = [];
  var otherImage = "";
  
  for (var i = 0;  i < friends.length; i++) {
      var friendid = "";
      
      if (friends[i].friendoneid == user.uuid) {
        friendid = friends[i].friendtwoid;
      } else {
        friendid = friends[i].friendoneid;
      }
      
      $.post('/fetchuser', {
        id : friendid
        },
          function(friend) {
              if (typeof(friend) == 'string') {
                    //console.log(user);
              } else {
                  //console.log(friend);
                  userFriends.push(friend.uuid);
              }
          });
  }

  
  var socket = io({
    query: {
        firstname: user.firstname,
        fullname: user.fullname,
        email: user.email,
        affiliation: user.affiliation,
        uuid: user.uuid,
        profileimageurl: user.profileimageurl
    }
  })

  $('profile').empty()
  //html('<img src=user.profileimageurl alt="" />); 
  

  //console.log("User friends is " + userFriends);
  var currentRoomid = " ";
  var currentChatUuid = " ";
  
  var oldUsers = [];
  
  //boolean for groupchat
  var isGroup = false;
  
  /*
  * When a new user gets active, loads it on the left
  */
  socket.on('users', function(dataString) {
      
      //$('#contacts ul').empty();
      var checkUsers = []
      //console.log("HA" + userFriends);
      for (i=0; i < dataString.length; i++) {

        if (userFriends.includes(JSON.parse(dataString[i]).uuid)) {
          checkOffline.push(JSON.parse(dataString[i]).uuid);
          checkUsers.push(JSON.parse(dataString[i]).uuid);
          if (!oldUsers.includes(JSON.parse(dataString[i]).uuid)) {
              oldUsers.push(JSON.parse(dataString[i]).uuid);
            data = JSON.parse(dataString[i]);
            if (data.uuid == user.uuid) {
                continue
            }

            $.post('/fetchuser', {
              id : data.uuid
            }, function(user) {
                 $('<li class="contact" data = ' + data.uuid + '><div class="wrap" data = ' + data.uuid + '><span class="contact-status online" data = ' + data.uuid + '></span>' +
                 '<img src='+user.profileimageurl+' data = ' + data.uuid + ' alt="" /><div class="meta" data = ' + data.uuid + '><p class="name" data = ' + data.uuid + '>' + data.fullname + '</p><p class="preview" data = ' + data.uuid + '></p></div></div></li>').appendTo($('#contacts ul'));
            })
            
          }
         
          else {
             continue;
          }
        }
      }
      
      for (i = 0; i < oldUsers.length; i++) {
          if (!checkUsers.includes(oldUsers[i])) {
              var list = document.getElementById('contacts').getElementsByClassName('contact');
          for (let item of list) {
            if (item.getAttribute('data') == oldUsers[i]) {
                item.remove();
            }
          }      
          oldUsers.splice(oldUsers.indexOf(oldUsers[i]), 1)         
          }
      }
      
      //console.log("uuid is " + currentChatUuid);
      if (currentChatUuid != " ") {
          var list = document.getElementById('contacts').getElementsByClassName('contact');
        for (let item of list) {
          if (item.getAttribute('data') == currentChatUuid) {
            item.className = "contact active";
        }
      } 
      } 
  });
 
 /*
 * When a user sends a message through clicking the arrow
 */ 
 var emit = (function() {
    if (currentRoomid == " ") {
        alert("Please select someone to chat with");
        return;
    }
    message = $(".message-input input").val();
    //console.log(message);
  if ($.trim(message) == '') {
    return false;
  }
  
  if(!isGroup) {
    $.post("/addMessage", {data: JSON.stringify({roomid: currentRoomid, memberid: user.uuid, message: message})}, function(data) {
          //console.log(data);
      });
    
    socket.emit('send message', JSON.stringify({message: message, roomid: currentRoomid}));
      newMessage();
    }
    else {
       socket.emit('group send message', JSON.stringify({message: message, roomid: currentRoomid, fullname: user.fullname}));
       newMessage();
    }
 });
 
 /*
 * When a user sends a message through enter
 */ 
 $(window).on('keydown', function(e) {
  if (e.which == 13) {
    message = $(".message-input input").val();
  if ($.trim(message) == '') {
    return false;
  }
  
  if(!isGroup) {
    if (currentRoomid == " ") {
          alert("Please select someone to chat with");
          return;
      }
    
      $.post("/addMessage", {data: JSON.stringify({roomid: currentRoomid, memberid: user.uuid, message: message})}, function(data) {
          //console.log(data);
      });
    
      socket.emit('send message', JSON.stringify({message: message, roomid: currentRoomid}));
      newMessage();
      return false;
    } else {
       if (currentRoomid == " ") {
          alert("Please select someone to chat with");
          return;
       }
       socket.emit('group send message', JSON.stringify({message: message, roomid: currentRoomid, fullname: user.fullname}));
       newMessage();
       return false;
    }
  }
 });
 
 /*
 * When a user receievs a message
 */ 
 socket.on('new message', function(msg){
     var docHeight = $(document).height();
     $('<li class="replies"><img src=' + otherImage +'><p>' + msg.msg + '</p></li>').appendTo($('.messages ul'));
     $('.contact.active .preview').html('<span></span>' + msg.msg);
   $(".messages").animate({scrollTop: docHeight + 93}, "fast");
   docHeight += 93;;
 });
 
 /*
 * When a user receives a group message
 */
 socket.on('group new message', function(msg){
     var docHeight = $(document).height();
     $('<li class="replies"><img src=' + otherImage +'><p>' + msg.msg + '</p></li>').appendTo($('.messages ul'));
     $('.contact.active .preview').html('<span></span>' + msg.msg);
   $(".messages").animate({scrollTop: docHeight + 93}, "fast");
   docHeight += 93;;
 });
 
 /*
 When a user accepts your group request
 */
 socket.on('group accept', function(data) {
     var dataString = data.split(" ");
     $('.contact-profile').html('<img src="" alt="" /><p>' + "Group Chat" + '</p>'); 
     //$('<li"><p>' + dataString[4] + " " + dataString[5] + " has joined your chat" + '</p></li>').appendTo($('.messages ul'));
     //$(".messages").animate({scrollTop: docHeight + 93}, "fast");
     //docHeight += 93;;
     isGroup = true;
     $("#change").html("Group Chat Activated");
     $('.messages ul').html(" ");
     var list = document.getElementById('contacts').getElementsByClassName('contact active');
     for (let item of list) {
      item.className = "contact";
   }
 });
 
 /*
 * When a user accepts your request
 */ 
 socket.on('accept', function(data) {
    var dataString = data.split(" ");
    otherImage = dataString[3];
    //Have to even delete the person who has an active profile already !!
    var list = document.getElementById('contacts').getElementsByClassName('contact active');
    for (let item of list) {
      item.className = "contact";
     }
    $('.contact-profile').html('<img src='+dataString[3]+'><p>' + dataString[1] + " " + dataString[2] + '</p>');
    var list = document.getElementById('contacts').getElementsByClassName('contact');
    for (let item of list) {
      if (item.getAttribute('data') == dataString[0]) {
          item.className = "contact active";
      }
  }
  
  var oldRoom = currentRoomid;
  
  currentChatUuid = dataString[0];
  //console.log(currentChatUuid + " updated");
  
  currentRoomid = dataString[dataString.length - 1];
  
  $.get("/getChat", {roomid: currentRoomid}, function(data) {
        var chat = JSON.parse(data);
        $('.messages ul').html(" ");
        
        
        for (i = 0; i < chat.length; i++)  {
             //If memberid is equal to my id i'll send it
             if (chat[i].memberid == user.uuid) {
                 $('<li class="sent"><img src=' + user.profileimageurl +'><p>' + chat[i].message + '</p></li>').appendTo($('.messages ul'));
         $('.message-input input').val(null);
         $('.contact.active .preview').html('<span>You: </span>' + chat[i].message);
         //$(".messages").animate({scrollTop: docHeight + 93}, "fast");
         //docHeight += 93;;
             } 
             
             else {
                 $('<li class="replies"><img src=' + otherImage +'><p>' + chat[i].message + '</p></li>').appendTo($('.messages ul'));
           $('.contact.active .preview').html('<span></span>' + chat[i].message);
         //$(".messages").animate({scrollTop: docHeight + 93}, "fast");
         //docHeight += 93;;
             }
        
        }
        var docHeight = $(document).height();
        $(".messages").animate({scrollTop: docHeight + 93}, "fast");
        docHeight += 93;;
    });
    
    //console.log("old room is" + oldRoom)
    //console.log("new room is" + currentRoomid)
    if (oldRoom != " ") {
      socket.emit('leave room', oldRoom).emit('join room', currentRoomid);
  } 
  else {
      socket.emit('join room', currentRoomid);
  }
  
  //console.log(currentRoomid);
 });
 
 /*
 * When a user rejects your group request
 */ 
 socket.on('group reject', function(data) {
     var dataString = data.split(" ");
     alert("Your group chat request to " + dataString[4] + " " + dataString[5]+ " has been rejected");
 });
 
 /*
 * When a user rejects your request
 */ 
 socket.on('reject', function(data) {
     var dataString = data.split(" ");
     alert("Your chat request to " + dataString[1] + " " + dataString[2]+ " has been rejected");
 });
 
/*
* When a user request you for a group chat
*/ 
socket.on('group request', function(dataString) {
    data = dataString.split(" ");
    if (confirm(data[2] + " " + data[3] + " would like to add you to a group chat")) {
        $('.contact-profile').html('<img src="" alt="" /><p>' + "Group Chat" + '</p>');   
        $('.messages ul').html(" ");
        var list = document.getElementById('contacts').getElementsByClassName('contact active');
      for (let item of list) {
        item.className = "contact";
    }
        var oldRoom = currentRoomid;
        currentRoomid = data[1]; 
        isGroup = true; 
        $("#change").html("Group Chat Activated");
        
        
        if (oldRoom != " ") {
        socket.emit('leave room', oldRoom).emit('join room', currentRoomid).emit('group accept', user.fullname + " " + dataString);
    } 
    else {
        socket.emit('join room', currentRoomid).emit('group accept', user.fullname + " " + dataString);
    }       
    }
    
    else {
        socket.emit('group reject', user.fullname + " " + dataString);   
    }
});
 
 /*
 * When a user requests you to chat
 */ 
 socket.on('request', function(dataString) {
     var data = dataString.split(" ");
     otherImage = data[7];
     if (confirm(data[5] + " " + data[6] + " would like to chat with you")) {
         $('.contact-profile').html('<img src='+data[7]+'><p>' + data[5] + " " + data[6] + '</p>'); 

           
         
         //Have to even delete the person who has an active profile already !!
         var list = document.getElementById('contacts').getElementsByClassName('contact active');
         for (let item of list) {
         item.className = "contact";
     }
     
         var list = document.getElementById('contacts').getElementsByClassName('contact');
       for (let item of list) {
         if (item.getAttribute('data') == data[4]) {
            item.className = "contact active";
         }
     }
     currentChatUuid = data[4];
     //console.log(currentChatUuid + " updated");
     var oldRoom = currentRoomid;
     
     $.get("/getRoom", {dataValue: dataString}, function(data) {
          currentRoomid = JSON.parse(data).roomid;
          //console.log(currentRoomid);
          
         
          $.get("/getChat", {roomid: currentRoomid}, function(data) {
            var chat = JSON.parse(data);
            $('.messages ul').html(" ");
            for (i = 0; i < chat.length; i++)  {
                  //If memberid is equal to my id i'll send it
                  if (chat[i].memberid == user.uuid) {
                      $('<li class="sent"><img src=' + user.profileimageurl +'><p>' + chat[i].message + '</p></li>').appendTo($('.messages ul'));
              $('.message-input input').val(null);
              $('.contact.active .preview').html('<span>You: </span>' + chat[i].message);
              //$(".messages").animate({scrollTop: docHeight + 93}, "fast");
              //docHeight += 93;;
                  } 
             
                  else {
                      $('<li class="replies"><img src=' + otherImage +'><p>' + chat[i].message + '</p></li>').appendTo($('.messages ul'));
                $('.contact.active .preview').html('<span></span>' + chat[i].message);
              //$(".messages").animate({scrollTop: docHeight + 93}, "fast");
              //docHeight += 93;;
                  }
        
            }
            
            var docHeight = $(document).height();
            $(".messages").animate({scrollTop: docHeight + 93}, "fast");
                docHeight += 93;;
              
              //console.log("old room is" + oldRoom)
              //console.log("new room is" + currentRoomid)
              if (oldRoom != " ") {
            socket.emit('leave room', oldRoom).emit('join room', currentRoomid).emit('accept', dataString + " " + currentRoomid);
        } 
        else {
            socket.emit('join room', currentRoomid).emit('accept', dataString + " " + currentRoomid);
        }
             
        });
        
      });
        
             
     } else {
         socket.emit('reject', dataString);
     }
 });

 //To set timer 
  var id = setInterval (function() {
      socket.emit('get users')
  }, 10000);
 
   $(document).ready(function() {
        $("#contacts ul").mouseup(function(e) {
            e.preventDefault();
            
            if (!isGroup) {
              //Format receiver id, receiver name (missing), receiver img (missing), sender id, sender name, sender image
               socket.emit('chat request', e.target.getAttribute('data') + "," + user.uuid + "," + user.fullname + "," + user.profileimageurl);
            }  else {
               if (currentRoomid == " ") {
                   socket.emit('chat request', e.target.getAttribute('data') + "," + user.uuid + "," + user.fullname + "," + user.profileimageurl);
               }
               
               else {
                   socket.emit('group chat request', e.target.getAttribute('data') + "," + currentRoomid + "," + user.fullname);
               }
            }
        });
        
        $(".submit").mouseup(function(e) {
            e.preventDefault();
            emit();
        });
        
        $("#groupChat").mouseup(function(e) {
           e.preventDefault();
           isGroup = true;
           $("#change").html("Group Chat Activated");
        });
        
        $("#leaveChat").mouseup(function(e) {
           e.preventDefault();
           isGroup = false;
           $("#change").html("Group Chat");
           oldRoom = currentRoomid;
           currentRoomid = " ";
           currentChatUuid = " ";
           $('.messages ul').html(" ");
           $('.contact-profile').html("");
           socket.emit('leave room', oldRoom);
        });

    });
</script>

</head><body>
<div id="frame">
  <div id="sidepanel">
    <div id="profile"> <a href="\home">
      <div class="wrap">
        <img id="profile-img" src=<%-pic%> class="online" alt="" /></a> 
        <p><%-fullname%></p>
      </div>

    </div>
    <div id="search">
      <label for=""><i class="fa fa-search" aria-hidden="true"></i></label>
      <input type="text" placeholder="Search contacts..." />
    </div>
    <div id="contacts">
      <ul>
        
      </ul>
    </div>
    <div id="bottom-bar">
      <button id="groupChat"><i class="fa fa-user-plus fa-fw" aria-hidden="true"></i> <span id="change">Group Chat</span></button>
      <button id="leaveChat"><span>Leave Chat</span></button>
    </div>
  </div>
  <div class="content">
    <div class="contact-profile">
    </div>
    <div class="messages">
      <ul>
        
      </ul>
    </div>
    <div class="message-input">
      <div class="wrap">
      <input type="text" placeholder="Write your message..." />
      <i class="fa fa-paperclip attachment" aria-hidden="true"></i>
      <button class="submit"><i class="fa fa-paper-plane" aria-hidden="true"></i></button>
      </div>
    </div>
  </div>
</div>
<script src='//production-assets.codepen.io/assets/common/stopExecutionOnTimeout-b2a7b3fe212eaa732349046d8416e00a9dec26eb7fd347590fbced3ab38af52e.js'></script><script src='https://code.jquery.com/jquery-2.2.4.min.js'></script>
<script >$(".messages").animate({ scrollTop: $(document).height() }, "fast");

/*$("#profile-img").click(function() {
  $("#status-options").toggleClass("active");
});*/

/*$(".expand-button").click(function() {
  $("#profile").toggleClass("expanded");
  $("#contacts").toggleClass("expanded");
});*/

/*$("#status-options ul li").click(function() {
  $("#profile-img").removeClass();
  $("#status-online").removeClass("active");
  $("#status-away").removeClass("active");
  $("#status-busy").removeClass("active");
  $("#status-offline").removeClass("active");
  $(this).addClass("active");
  
  if($("#status-online").hasClass("active")) {
    $("#profile-img").addClass("online");
  } else if ($("#status-away").hasClass("active")) {
    $("#profile-img").addClass("away");
  } else if ($("#status-busy").hasClass("active")) {
    $("#profile-img").addClass("busy");
  } else if ($("#status-offline").hasClass("active")) {
    $("#profile-img").addClass("offline");
  } else {
    $("#profile-img").removeClass();
  };
  
  $("#status-options").removeClass("active");
});*/

var docHeight = $(document).height();
function newMessage() {
  message = $(".message-input input").val();

  if ($.trim(message) == '') {
    return false;
  }
  $('<li class="sent"><img src=<%- pic %> alt="" /><p>' + message + '</p></li>').appendTo($('.messages ul'));
  $('.message-input input').val(null);
  $('.contact.active .preview').html('<span>You: </span>' + message);
  $(".messages").animate({scrollTop: docHeight + 93}, "fast");
  docHeight += 93;;
};

</script>
</body></html>
